<?php

namespace DummyNamespace;

use DummyFullModelClass;
use PPSpaces\Repositories\Repository;

class DummyClass extends Repository {

    /**
     * The DummyModelVariable model instance.
     *
     * @var \DummyFullModelClass
     */
    protected $model = "DummyFullModelClass";

    /**
     * Scope a query for the model before executing
     *
     * @param \Illuminate\Database\Query\Builder $query
     * @return void
     */
    public function before($query) {}

    /**
     * Get all of the models from the database.
     *
     * @param  array|mixed  $columns
     * @return \Illuminate\Database\Eloquent\Collection|static[]
     */
    public function all($columns = ['*']) {
        return $this->get($columns);
    }

    /**
     * Dynamically retrieve attributes on the model.
     *
     * @param  array  $columns
     * @return \DummyFullModelClass
     */
    public function get($columns = ['*']) {
        return $this->repository->get($columns);
    }

    /**
     * Get a new query of one model by their IDs.
     *
     * @param  array|int  $id
     * @return \DummyFullModelClass
     */
    public function find($id) {
        // return $this->repository->findOrFail($id);
    }

    /**
     * Perform a model create operation.
     *
     * @param  array  $attributes
     * @return bool
     */
    public function create(array $attributes) {
        // return $this->repository->create($attributes);
    }

    /**
     * Update the model in the database.
     *
     * @param  array  $attributes
     * @param  array  $options
     * @return bool
     */
    public function update(array $attributes = []) {
        // return $this->repository->update($attributes);
    }

    /**
     * Delete the model from the database.
     *
     * @return bool|null
     *
     * @throws \Exception
     */
    public function delete($id) {
        // return $this->repository->findOrFail($id)->delete();
    }

    /**
     * Destroy the models for the given IDs.
     *
     * @param  \Illuminate\Support\Collection|array|int  $ids
     * @return int
     */
    public static function destroy($ids) {
        //
    }
}
